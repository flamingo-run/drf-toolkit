[tool.poetry]
name = "drf-kit"
version = "1.35.0"
description = "DRF Toolkit"
authors = ["Nilo Saude <tech@nilo.co>"]
packages = [
    { include = "drf_kit" },
]


[tool.poetry.dependencies]
python = "~3.11||~3.12"
Django = "~4||~5"
djangorestframework = "^3"
django-filter = "^23"
django-ordered-model = "<3.7.2"  # this version blocks order_with_respect_to to be FK only
drf-extensions = "^0.7"
# psycopg = {version = "^3", "extras" = ["binary"] }  # blocked by: https://github.com/newrelic/newrelic-python-agent/issues/585
psycopg2-binary = "^2"


[tool.poetry.group.dev.dependencies]
ruff = "*"
safety = "*"
factory-boy = "*"
freezegun = "*"
pytest-cov = "*"
pytest-django = "*"
pytest-rerunfailures = "*"
pytest-xdist = "*"
pytest-sugar = "*"
pytest-random-order = "*"


[tool.ruff]
line-length = 120
target-version = "py312"

[tool.ruff.lint]
select = ["RUF", "I", "PL", "F", "COM", "UP", "DJ", "T10", "T20", "DTZ", "SIM", "TID", "PTH", "ERA", "TRY"]
ignore = ["COM812", "PLR2004", "PLR0911", "PLR0913", "PLR0915", "DJ001", "DJ001", "DJ008", "TRY003", "PLR0912", "RUF012"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"settings.py" = ["F403", "F404", "F405"]

[tool.ruff.lint.isort]
known-first-party = ["test_app", "drf_kit"]


[tool.pytest.ini_options]
addopts = "-n auto --reruns 1 --random-order --cov"
python_files = ["tests_*.py"]
DJANGO_SETTINGS_MODULE = "test_app.settings"
pythonpath = [".", "test_app", "drf_kit"]

[tool.coverage.run]
branch = true
source = ["drf_kit"]
omit = ["*/manage.py", "*/settings.py", "*/wsgi.py"]


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
