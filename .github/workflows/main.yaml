name: Github CI

on:
  pull_request:
    branches:
      - '**'
  push:
    branches:
      - main

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}

      - name: Install Python dependencies
        run: |
          make dependencies
      - name: Lint with pylint
        run: |
          make lint

  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}

      - name: Install Python dependencies
        run: |
          make dependencies
      - name: Install as a package
        run: |
          poetry build

  unit:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: sample_app
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v1

      - name: Set up Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: |
          make dependencies

      - name: Prepare CodeClimate
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build

      - name: Unit test with Django test suite
        run: |
          make unit
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/sample_app
          LOG_LEVEL: ERROR

      - name: Report coverage
        run: |
          poetry run coverage xml
          GIT_COMMIT_SHA=`[[ -z "$GITHUB_HEAD_REF" ]] && echo $GITHUB_SHA || echo ${{ github.event.pull_request.head.sha }}`  GIT_BRANCH=`[[ -z "$GITHUB_HEAD_REF" ]] && echo ${GITHUB_REF/refs\/heads\/} || echo $GITHUB_HEAD_REF` ./cc-test-reporter after-build -t coverage.py --exit-code $?
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
